{
 Part of the XeTeX typesetting system
 Copyright (c) 1994-2008 by SIL International
 Copyright (c) 2009 by Jonathan Kew

 SIL Author(s): Jonathan Kew

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE COPYRIGHT HOLDERS BE LIABLE
FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Except as contained in this notice, the name of the copyright holders
shall not be used in advertising or otherwise to promote the sale,
use or other dealings in this Software without prior written
authorization from the copyright holders.
}

{ xetex.defines: additions for xetex }

@define @field ptr;
@define const null_ptr;
@define type void_pointer;
@define function get_native_char();
@define function get_native_usv();
@define procedure set_native_char();
@define function get_native_glyph();
@define procedure set_native_metrics();
@define procedure set_justified_native_glyphs();
@define procedure set_native_glyph_metrics();
@define function find_native_font();
@define procedure release_font_engine();
@define function sizeof();
@define function make_font_def();
@define function make_xdv_glyph_array_data();
@define function xdv_buffer_byte();
@define procedure fprintf();
@define type unicode_file;
@define function u_open_in();
@define function u_open_out();
@define procedure u_close();
@define function dvi_open_out();
@define function dvi_close();
@define function delcode1();
@define procedure setdelcode1();
@define function readcint1();
@define procedure setcint1();
@define procedure print_utf8_str();
@define procedure set_input_file_encoding();
@define procedure terminate_font_manager;
@define type gzFile;
@define procedure check_for_tfm_font_mapping;
@define function load_tfm_font_mapping;
@define function apply_tfm_font_mapping();

@define procedure initGraphiteBreaking();
@define function findNextGraphiteBreak();
@define function usingOpenType();
@define function usingGraphite();
@define procedure gr_print_font_name();
@define function gr_font_get_named();
@define function gr_font_get_named_1();
@define function isOpenTypeMathFont();

@define function strerror();
@define procedure memcpy();
@define function glyphinfobyte();
@define function cast_to_ushort();

@define function aat_font_get();
@define function aat_font_get_1();
@define function aat_font_get_2();
@define function aat_font_get_named();
@define function aat_font_get_named_1();
@define procedure aat_print_font_name();
@define function ot_font_get();
@define function ot_font_get_1();
@define function ot_font_get_2();
@define function ot_font_get_3();
@define function map_char_to_glyph();
@define function map_glyph_to_index();
@define function get_glyph_bounds();
@define procedure get_native_char_height_depth();
@define procedure get_native_char_sidebearings();
@define function get_native_italic_correction();
@define function get_native_glyph_italic_correction();
@define procedure print_glyph_name();
@define function get_font_char_range();

@define function getnativecharwd();
@define function getnativecharht();
@define function getnativechardp();
@define function getnativecharic();

@define function get_native_mathsy_param();
@define function get_native_mathex_param();
@define function get_ot_math_constant();
@define function get_ot_math_variant();
@define function get_ot_assembly_ptr();
@define function get_ot_math_ital_corr();
@define function get_ot_math_accent_pos();
@define function get_ot_math_kern();

@define function ot_part_count();
@define function ot_part_glyph();
@define function ot_part_start_connector();
@define function ot_part_end_connector();
@define function ot_part_full_advance();
@define function ot_part_is_extender();
@define function ot_min_connector_overlap();

@define function set_family_field();
@define function set_class_field();
@define function math_fam_field();
@define function math_class_field();
@define function math_char_field();

@define procedure aat_get_font_metrics();
@define procedure ot_get_font_metrics();

@define function get_encoding_mode_and_info();

@define procedure linebreak_start();
@define function linebreak_next;

{ extra stuff used in picfile code }
@define type real_point;
@define type real_rect;
@define type transform;

@define function deref();

@define function D2Fix();
@define function Fix2D();

@define function find_pic_file();
@define function pic_path_byte();
@define function count_pdf_file_pages;

@define procedure make_identity();
@define procedure make_scale();
@define procedure make_translation();
@define procedure make_rotation();
@define procedure transform_point();
@define procedure transform_concat();

@define procedure setPoint();

@define function xCoord();
@define function yCoord();
@define function aField();
@define function bField();
@define function cField();
@define function dField();
@define function xField();
@define function yField();
@define function wdField();
@define function htField();
@define function apply_mapping();

@define procedure set_cp_code();
@define function get_cp_code();
@define function get_native_word_cp();

@define procedure getmd5sum();
